// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Single_Page_Task_02072025.Data;

#nullable disable

namespace Single_Page_Task_02072025.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250820101002_v8_aug_tolocaltime")]
    partial class v8_aug_tolocaltime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Single_Page_Task_02072025.Models.CorporateCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Corporate_Customer_Tbl");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.IndividualCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Individual_Customer_Tbl");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.MeetingMinute", b =>
                {
                    b.Property<int>("MeetingMinuteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingMinuteId"));

                    b.Property<string>("AttendsFromClientSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendsFromHostSide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingAgenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MeetingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeetingDecision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingDiscussion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeetingPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MeetingTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MeetingMinuteId");

                    b.ToTable("Meeting_Minutes_Master_Tbl");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.MeetingMinuteDetail", b =>
                {
                    b.Property<int>("MeetingMinuteDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeetingMinuteDetailId"));

                    b.Property<int>("MeetingMinuteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductServiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeetingMinuteDetailId");

                    b.HasIndex("MeetingMinuteId");

                    b.HasIndex("ProductServiceId");

                    b.ToTable("Meeting_Minutes_Details_Tbl");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.ProductService", b =>
                {
                    b.Property<int>("ProductServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductServiceId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductServiceId");

                    b.ToTable("Products_Service_Tbl");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.MeetingMinuteDetail", b =>
                {
                    b.HasOne("Single_Page_Task_02072025.Models.MeetingMinute", "MeetingMinute")
                        .WithMany("Details")
                        .HasForeignKey("MeetingMinuteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Single_Page_Task_02072025.Models.ProductService", "ProductService")
                        .WithMany()
                        .HasForeignKey("ProductServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeetingMinute");

                    b.Navigation("ProductService");
                });

            modelBuilder.Entity("Single_Page_Task_02072025.Models.MeetingMinute", b =>
                {
                    b.Navigation("Details");
                });
#pragma warning restore 612, 618
        }
    }
}
